from pprint import pprint

def solution(n, s, a, b, fares):
    answer = float('inf')
    distance = [[float('inf')] * n for _ in range(n)]
    for i in range(n):
        distance[i][i] = 0
    for i, j, k in fares:
        distance[i-1][j-1] = k
        distance[j-1][i-1] = k

    for k in range(n):
        for i in range(n):
            for j in range(n):
                distance[i][j] = min(distance[i][j], distance[i][k]+distance[k][j])

    for i in range(n):
        fare = distance[s-1][i]+distance[i][a-1]+distance[i][b-1]
        answer = min(answer, fare)
    return answer

'''
정확성  테스트
테스트 1 〉	통과 (0.16ms, 10.1MB)
테스트 2 〉	통과 (0.22ms, 10.2MB)
테스트 3 〉	통과 (0.08ms, 10.1MB)
테스트 4 〉	통과 (0.30ms, 10.3MB)
테스트 5 〉	통과 (0.52ms, 10.2MB)
테스트 6 〉	통과 (0.84ms, 10.2MB)
테스트 7 〉	통과 (1.06ms, 10.3MB)
테스트 8 〉	통과 (1.23ms, 10.2MB)
테스트 9 〉	통과 (1.81ms, 10.1MB)
테스트 10 〉	통과 (2.42ms, 10.3MB)
효율성  테스트
테스트 1 〉	통과 (268.68ms, 10.4MB)
테스트 2 〉	통과 (996.71ms, 11MB)
테스트 3 〉	통과 (2130.37ms, 11.4MB)
테스트 4 〉	통과 (2391.64ms, 11.4MB)
테스트 5 〉	통과 (2131.19ms, 11.5MB)
테스트 6 〉	통과 (2367.89ms, 11.4MB)
테스트 7 〉	통과 (2355.44ms, 13.9MB)
테스트 8 〉	통과 (2369.08ms, 14MB)
테스트 9 〉	통과 (2420.87ms, 13MB)
테스트 10 〉	통과 (2423.27ms, 12.9MB)
테스트 11 〉	통과 (2214.36ms, 13MB)
테스트 12 〉	통과 (2354.34ms, 12.8MB)
테스트 13 〉	통과 (2177.65ms, 12.8MB)
테스트 14 〉	통과 (2392.49ms, 12.7MB)
테스트 15 〉	통과 (2405.85ms, 12.8MB)
테스트 16 〉	통과 (2337.89ms, 11.4MB)
테스트 17 〉	통과 (2337.14ms, 11.5MB)
테스트 18 〉	통과 (2389.64ms, 11.2MB)
테스트 19 〉	통과 (2180.25ms, 11.5MB)
테스트 20 〉	통과 (2374.83ms, 11.7MB)
테스트 21 〉	통과 (2143.80ms, 11.6MB)
테스트 22 〉	통과 (2383.45ms, 12.7MB)
테스트 23 〉	통과 (2369.22ms, 12.7MB)
테스트 24 〉	통과 (2388.62ms, 12.7MB)
테스트 25 〉	통과 (2351.89ms, 11.2MB)
테스트 26 〉	통과 (2325.34ms, 11MB)
테스트 27 〉	통과 (2064.19ms, 10.5MB)
테스트 28 〉	통과 (2239.91ms, 10.4MB)
테스트 29 〉	통과 (268.11ms, 10.3MB)
테스트 30 〉	통과 (302.07ms, 10.3MB)
'''


print(solution(6, 4, 6, 2, [[4, 1, 10], [3, 5, 24], [5, 6, 2], [3, 1, 41], [5, 1, 24], [4, 6, 50], [2, 4, 66], [2, 3, 22], [1, 6, 25]]))
print(solution(7, 3, 4, 1, [[5, 7, 9], [4, 6, 4], [3, 6, 1], [3, 2, 3], [2, 1, 6]]))
print(solution(6, 4, 5, 6, [[2,6,6], [6,3,7], [4,6,7], [6,5,11], [2,5,12], [5,3,20], [2,4,8], [4,3,9]]))